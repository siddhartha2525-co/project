version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: emotion_db
    environment:
      POSTGRES_DB: emotion_db
      POSTGRES_USER: emotion_user
      POSTGRES_PASSWORD: emotion_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - emotion_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: emotion_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - emotion_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: emotion_backend
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://emotion_user:emotion_password@postgres:5432/emotion_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      ML_SERVICE_URL: http://ml-service:5001
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    networks:
      - emotion_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/node_modules

  # ML Service
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    container_name: emotion_ml_service
    environment:
      PORT: 5001
      DATABASE_URL: postgresql://emotion_user:emotion_password@postgres:5432/emotion_db
      REDIS_URL: redis://redis:6379
      MODEL_PATH: ./models/emotion_model.h5
      FLASK_ENV: development
    ports:
      - "5001:5001"
    depends_on:
      - postgres
      - redis
    networks:
      - emotion_network
    restart: unless-stopped
    volumes:
      - ./ml-service:/app
      - /app/venv

  # Frontend (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: emotion_frontend
    environment:
      REACT_APP_API_URL: http://localhost:5000
      REACT_APP_ML_SERVICE_URL: http://localhost:5001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - emotion_network
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: emotion_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - ml-service
      - frontend
    networks:
      - emotion_network
    restart: unless-stopped
    profiles:
      - production

networks:
  emotion_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
