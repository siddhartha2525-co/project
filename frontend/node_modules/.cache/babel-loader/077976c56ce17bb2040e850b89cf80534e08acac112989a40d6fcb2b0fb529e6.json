{"ast":null,"code":"var _jsxFileName = \"/Users/adeshsiddharth123/project 1/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Backend API base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5002';\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Set up axios defaults\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n  }, []);\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get(`${API_BASE_URL}/api/auth/profile`);\n          setUser(response.data.user);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          localStorage.removeItem('token');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      console.log('AuthContext: Attempting login to:', `${API_BASE_URL}/api/auth/login`);\n      console.log('AuthContext: Login payload:', {\n        email,\n        password: '***'\n      });\n      const response = await axios.post(`${API_BASE_URL}/api/auth/login`, {\n        email,\n        password\n      });\n      console.log('AuthContext: Login response:', response.data);\n      const {\n        user: userData,\n        token\n      } = response.data;\n\n      // Store token\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Set user\n      setUser(userData);\n      toast.success('Login successful!');\n      return true;\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response3$data;\n      console.error('AuthContext: Login error details:', error);\n      console.error('AuthContext: Error response:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      console.error('AuthContext: Error status:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status);\n      console.error('AuthContext: Error message:', error.message);\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Login failed. Please try again.';\n      toast.error(errorMessage);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (name, email, password, role) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_BASE_URL}/api/auth/register`, {\n        name,\n        email,\n        password,\n        role\n      });\n      const {\n        user: userData,\n        token\n      } = response.data;\n\n      // Store token\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Set user\n      setUser(userData);\n      toast.success('Registration successful! Welcome aboard!');\n      return true;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Registration error:', error);\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Registration failed. Please try again.';\n      toast.error(errorMessage);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    // Remove token\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n\n    // Clear user\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async data => {\n    try {\n      setLoading(true);\n      const response = await axios.put(`${API_BASE_URL}/api/users/profile`, data);\n\n      // Update user state\n      setUser(response.data.user);\n      toast.success('Profile updated successfully!');\n      return true;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Profile update error:', error);\n      const errorMessage = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Profile update failed. Please try again.';\n      toast.error(errorMessage);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Ui6DLq5vMU2GgsRY6PPBrtV3hI8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","toast","jsxDEV","_jsxDEV","API_BASE_URL","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","defaults","headers","common","checkAuth","response","get","data","error","console","removeItem","login","email","password","log","post","userData","setItem","success","_error$response","_error$response2","_error$response3","_error$response3$data","status","message","errorMessage","register","name","role","_error$response4","_error$response4$data","logout","updateProfile","put","_error$response5","_error$response5$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adeshsiddharth123/project 1/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Backend API base URL\nconst API_BASE_URL = 'http://localhost:5002';\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n  role: 'teacher' | 'student' | 'admin';\n  created_at: string;\n  updated_at: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<boolean>;\n  register: (name: string, email: string, password: string, role: 'teacher' | 'student') => Promise<boolean>;\n  logout: () => void;\n  updateProfile: (data: Partial<User>) => Promise<boolean>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // Set up axios defaults\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n  }, []);\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get(`${API_BASE_URL}/api/auth/profile`);\n          setUser(response.data.user);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          localStorage.removeItem('token');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (email: string, password: string): Promise<boolean> => {\n    try {\n      setLoading(true);\n      console.log('AuthContext: Attempting login to:', `${API_BASE_URL}/api/auth/login`);\n      console.log('AuthContext: Login payload:', { email, password: '***' });\n      \n      const response = await axios.post(`${API_BASE_URL}/api/auth/login`, { email, password });\n      \n      console.log('AuthContext: Login response:', response.data);\n      \n      const { user: userData, token } = response.data;\n      \n      // Store token\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      // Set user\n      setUser(userData);\n      \n      toast.success('Login successful!');\n      return true;\n    } catch (error: any) {\n      console.error('AuthContext: Login error details:', error);\n      console.error('AuthContext: Error response:', error.response?.data);\n      console.error('AuthContext: Error status:', error.response?.status);\n      console.error('AuthContext: Error message:', error.message);\n      \n      const errorMessage = error.response?.data?.error || 'Login failed. Please try again.';\n      toast.error(errorMessage);\n      \n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (name: string, email: string, password: string, role: 'teacher' | 'student'): Promise<boolean> => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_BASE_URL}/api/auth/register`, { name, email, password, role });\n      \n      const { user: userData, token } = response.data;\n      \n      // Store token\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      // Set user\n      setUser(userData);\n      \n      toast.success('Registration successful! Welcome aboard!');\n      return true;\n    } catch (error: any) {\n      console.error('Registration error:', error);\n      \n      const errorMessage = error.response?.data?.error || 'Registration failed. Please try again.';\n      toast.error(errorMessage);\n      \n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    // Remove token\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    \n    // Clear user\n    setUser(null);\n    \n    toast.success('Logged out successfully');\n  };\n\n  const updateProfile = async (data: Partial<User>): Promise<boolean> => {\n    try {\n      setLoading(true);\n      const response = await axios.put(`${API_BASE_URL}/api/users/profile`, data);\n      \n      // Update user state\n      setUser(response.data.user);\n      \n      toast.success('Profile updated successfully!');\n      return true;\n    } catch (error: any) {\n      console.error('Profile update error:', error);\n      \n      const errorMessage = error.response?.data?.error || 'Profile update failed. Please try again.';\n      toast.error(errorMessage);\n      \n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}